output:
    format: colored-line-number
    print-issued-lines: true
    print-linter-name: true
    sort-results: true

linters-settings:
    #sort: path,line,severity
    #errcheck configuration
    #gofmt configuration
    gofmt:
        simplify: true
    gosimple:

        checks: [
            "all",
          # Ignore redundant `return` statements
            "-S1023"
        ]

issues:
    # List of regexps of issue texts to exclude.
    #
    # But independently of this option we use default exclude patterns,
    # it can be disabled by `exclude-use-default: false`.
    # To list all excluded by default patterns execute `golangci-lint run --help`
    #
    # Default: https://golangci-lint.run/usage/false-positives/#default-exclusions
    #exclude:
    # Excluding configuration per-path, per-linter, per-text and per-source
    exclude-rules:
        # Exclude some linters from running on tests files.
        - path: _test\.go
          linters:
              - gocyclo
              - errcheck
              - dupl
              - gosec
        # Exclude known linters from partially hard-vendored code,
        # which is impossible to exclude via `nolint` comments.
        # `/` will be replaced by current OS file path separator to properly work on Windows.
        - path: internal/hmac/
          text: "weak cryptographic primitive"
          linters:
              - gosec
        # Exclude some `staticcheck` messages.
        - linters:
              - staticcheck
          text: "SA9003:"
        # Exclude `lll` issues for long lines with `go:generate`.
        - linters:
              - lll
          source: "^//go:generate "
    # Independently of option `exclude` we use default exclude patterns,
    # it can be disabled by this option.
    # To list all excluded by default patterns execute `golangci-lint run --help`.
    # Default: true.
    exclude-use-default: false
    # If set to true exclude and exclude-rules regular expressions become case-sensitive.
    # Default: false
    exclude-case-sensitive: false

    # Maximum issues count per one linter.
    # Set to 0 to disable.
    # Default: 50
    max-issues-per-linter: 0
    # Maximum count of issues with the same text.
    # Set to 0 to disable.
    # Default: 3
    max-same-issues: 0
    # Show only new issues: if there are unstaged changes or untracked files,
    # only those changes are analyzed, else only changes in HEAD~ are analyzed.
    # It's a super-useful option for integration of golangci-lint into existing large codebase.
    # It's not practical to fix all existing issues at the moment of integration:
    # much better don't allow issues in new code.
    #
    # Default: false.
    #new: true
    # Show only new issues created after git revision `REV`.
    #new-from-rev: HEAD
    # Show only new issues created in git patch with set file path.
    #new-from-patch: path/to/patch/file
    # Fix found issues (if it's supported by the linter).
    fix: true


linters:
    # enable only default linters FOR NOW
